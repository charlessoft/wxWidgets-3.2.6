name: Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
      release_name:
        description: 'Release name'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Debug artifact (Win32)
      uses: actions/download-artifact@v4
      with:
        name: vc_lib_dbg_win32

    - name: Download Release artifact (Win32)
      uses: actions/download-artifact@v4
      with:
        name: vc_lib_rel_win32

    - name: Download Debug artifact (x64)
      uses: actions/download-artifact@v4
      with:
        name: vc_lib_dbg_x64

    - name: Download Release artifact (x64)
      uses: actions/download-artifact@v4
      with:
        name: vc_lib_rel_x64

    - name: Check for existing release
      id: check_release
      run: |
        existing_release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ inputs.tag_name }}" | jq -r '.id')
        echo "release_id=$existing_release_id" >> $GITHUB_ENV

    - name: Delete existing release if exists
      if: ${{ env.release_id != 'null' }}
      run: |
        curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.release_id }}"

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.tag_name }}
        release_name: ${{ inputs.release_name }}
        draft: false
        prerelease: false
        files: |
          vc_lib_dbg_win32.zip
          vc_lib_rel_win32.zip
          vc_lib_dbg_x64.zip
          vc_lib_rel_x64.zip
